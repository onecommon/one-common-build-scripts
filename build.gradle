// Test
buildscript {
    repositories {
        mavenLocal()
    }

    // dependencies {
    //     classpath "$group:$artifactId:$publishingVersion"
    // }
}

plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'maven-publish'
//    id 'signing'
}

// apply plugin: "$group.$artifactId"
apply from: 'gradleScripts/index.gradle'

println "Publish Version: $publishVersion"
println "Publish repo: $sonatypeMavenRepo"

def JvmVersion = 1.8
sourceCompatibility = JvmVersion
version publishVersion
group group

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    testImplementation "io.mockk:mockk:1.10.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "$JvmVersion"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "$JvmVersion"
}

test {
    useJUnitPlatform()
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = "$group.$artifactId"
            implementationClass = "${group}.OneCommonBuildPlugin"
        }
    }
}
// ------------



//def artifactName = "${artifactId}.zip"
//def buildDir = 'build'

//task buildArtifact(type: Zip) {
//   from './'
//   include 'gradleScripts/**/*'
//   include 'commitlint.config.js'
//   archiveFileName = artifactName
//   destinationDirectory = file(buildDir)
//}

publishing {
    repositories {
        maven {
            url sonatypeMavenRepo
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
    
    publications {
        maven(MavenPublication) {
            artifactId = artifactId
//            version publishVersion
//            artifact pathCombine(buildDir, artifactName)

//            setupPomForMavenCentral(pom)
        }
    }
}

//signing {
//    sign publishing.publications.maven
//}

def setupPomForMavenCentral(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Common build scripts for One SDK'
            name 'One Common Build Scripts'
            url 'https://github.com/hoangbv15/one-common-build-scripts'
            organization {
                name 'io.github.hoangbv15'
                url 'https://hoangbv15.github.io/'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/hoangbv15/one-common-build-scripts/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/hoangbv15/one-common-build-scripts/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/hoangbv15/one-common-build-scripts'
                connection 'scm:https://github.com/hoangbv15/one-common-build-scripts.git'
                developerConnection 'scm:git@github.com:hoangbv15/one-common-build-scripts.git'
            }
            developers {
                developer {
                    name author
                }
            }
        }
    }
}

//publish.dependsOn(buildArtifact)
//publishToMavenLocal.dependsOn(buildArtifact)